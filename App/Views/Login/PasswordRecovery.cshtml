@model NotSignedPasswordModel
@using App.Models
@{
    ViewBag.Title = "Recuperação de Senha";
    var error = (ViewBag.Error as string);
}

<style>
    html,
    body {
        height: 100%;
    }

    .outer-wrapper {
        height: calc(100% - 73px);
        display: -ms-flexbox;
        display: flex;
        -ms-flex-align: center;
        align-items: center;
        padding-top: 40px;
        padding-bottom: 40px;
    }

    .signin-wrapper {
        max-width: 380px;
        border-radius: 10px;
    }
</style>
<div class="outer-wrapper">

    <div class="container">
        @using (Html.BeginForm("EditPassword", "Login", FormMethod.Post, htmlAttributes: new { @class = "mx-auto" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.HashCode)
            <div class="signin-wrapper w-100 mx-auto bg-light mb-4">
                <h5 class="p-3 m-0 border-bottom border-info text-info">Mudança de Senha</h5>
                <div class="p-3 text-left">
                    <div class="form-inline">
                        <small>@Html.LabelFor(m => m.Email, new { @class = "text-muted font-weight-thin" })</small>
                        @Html.EditorFor(m => m.Email, new
                        {
                            htmlAttributes = new
                            {
                                @readonly = true,
                                @class = "form-control-plaintext text-primary px-2 w-auto",
                                @type = "email",
                                autocomplete = "username"
                            }
                        })
                    </div>
                    <div class="form-group">

                        <small>@Html.LabelFor(m => m.NewPassword, new { @class = "text-muted font-weight-thin" })</small>
                        @Html.EditorFor(m => m.NewPassword, new
                        {
                            htmlAttributes = new
                            {
                                @autofocus = true,
                                @class = "form-control text-primary",
                                @placeholder = "Password",
                                @type = "password",
                                autocomplete = "new-password"
                            }
                        })
                        <small>@Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })</small>
                    </div>
                </div>
                <div class="border-top border-info p-3 d-flex justify-content-between align align-items-center">
                    <a href="/login" class="btn btn-sm btn-link">Voltar para Login</a>
                    <button type="submit" class="btn btn-sm btn-success">Salvar mudança</button>
                </div>
            </div>
            if (!string.IsNullOrEmpty(error))
            {
                <div class="my-1 alert bg-danger signin-wrapper w-100 mx-auto" role="alert">
                    <h5 class="alert-heading text-light">
                        Sua requisição falhou!
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </h5>
                    <hr class="my-2 bg-white-50">
                    <small class="text-monospace">@error</small>
                </div>
            }
            <p class="mt-5 text-muted text-center">&copy;Rede Synapse - @DateTime.Now.Year</p>
        }
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/stuart-crud")
    }
</div>